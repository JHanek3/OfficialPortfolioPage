{"version":3,"sources":["components/Calculator.js","components/ToDoItem.js","todosData.js","components/ToDoList.js","components/MemeHeader.js","components/MGComp.js","components/MemeGenerator.js","components/QuoteLs.js","components/Quote.js","components/SpeedTypingGame.js","context/PicSomeContext.js","components/PicSomeHeader.js","components/PicSomeImage.js","utils/indexPhoto.js","pages/Photos.js","components/PicSome.js","components/PicSomeCartItem.js","pages/Cart.js","components/SWApi.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","str","adder","val","concat","solver","statement","eval","onClick","type","onSubmit","TodoItem","props","className","defaultChecked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","todosData","List","useState","globalData","setGlobalData","map","todo","itemsData","key","Header","src","alt","MemeGeneratorComp","data","setData","topText","setTopText","bottomText","setBottomText","randomImg","setRandomImg","event","target","name","value","console","log","useEffect","fetch","then","response","json","memes","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","placeholder","MemeGenerator","QuoteLs","Quote","quote","setQuote","randomQuote","animationIn","animationOut","durationOut","SpeedTypingGame","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","setTimeout","time","numWords","trim","split","filter","word","calculateWordCount","endGame","ref","e","disabled","current","focus","Context","React","createContext","ContextProvider","children","allPhotos","setAllPhotos","cartItems","setCartItems","res","Provider","toggleFavorite","updatedArr","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","emptyCart","cartClassName","useContext","to","Image","img","hovered","setHovered","onMouseEnter","onMouseLeave","some","getClass","i","Photos","imageElements","PicSome","CartItem","iconClassName","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","currency","cartItemElements","SWApi","apiData","setApiData","expo","x","f","Number","parseFloat","toExponential","result","results","catch","error","Table","striped","bordered","hover","variant","planet","diameter","rotation_period","orbital_period","climate","terrain","population","pi","y","layout","yaxis","range","height","title","textalign","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.07dddc02.chunk.js","sourcesContent":["import React, {useState}  from \"react\"\r\n\r\nfunction Calculator() {\r\n    const str = \"\"\r\n    \r\n    function adder(val) {\r\n        \r\n        return str.concat(val)\r\n    }\r\n    function solver(statement) {\r\n        return eval(statement)\r\n    }\r\n    return (\r\n        <div>\r\n            {str}\r\n                    <button\r\n                        onClick={adder(1)}>\r\n                    1</button>\r\n                    <button>+</button>\r\n                    <button type=\"submit\" onSubmit={solver()}>=</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","import React from \"react\"\r\nimport \"../compCSS/ToDoList.css\"\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo-item\">\r\n            <input\r\n                type=\"checkbox\"\r\n                defaultChecked={props.item.completed}\r\n                onChange={() => props.handleChange(props.item.id)}\r\n            />\r\n            <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Walk the dog\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Snap Caroline\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on lastest Netflix series\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React, {useState} from \"react\"\r\nimport TodoItem from \"./ToDoItem\"\r\nimport todosData from \"../todosData\"\r\nimport \"../compCSS/ToDoList.css\"\r\n\r\n\r\nfunction List() {\r\n  const [globalData, setGlobalData] = useState(todosData)\r\n\r\n  function handleChange(id) {\r\n    setGlobalData(item => {\r\n      const updatedToDos = item.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed\r\n          }\r\n\r\n        } \r\n        return todo\r\n      })\r\n      return updatedToDos\r\n    })\r\n  }\r\n\r\n  const itemsData = globalData.map(item => <TodoItem key={item.id} item={item} handleChange={handleChange}/>)\r\n\r\n\r\n  return(\r\n    <div className=\"todo-list\">\r\n      {itemsData}\r\n    </div>\r\n  )\r\n}\r\nexport default List","import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"memeHeader\">\r\n            <img\r\n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \r\n                alt=\"Problem?\"\r\n            />\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useState, useEffect} from \"react\"\r\nimport \"../compCSS/MemeGenerator.css\"\r\n\r\nfunction MemeGeneratorComp() {\r\n    const [data, setData] = useState()\r\n    const [topText, setTopText] = useState(\"\")\r\n    const [bottomText, setBottomText] = useState(\"\")\r\n    const [randomImg, setRandomImg] = useState(\"http://i.imgflip.com/1bij.jpg\")\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                setData(memes)\r\n            })\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        if (name === \"toptext\") {\r\n            setTopText(value)\r\n        } else if (name === \"bottomtext\") {\r\n            setBottomText(value)\r\n        } else {\r\n            console.log(\"Its broke\")\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * data.length)\r\n        const randMemeImg = data[randNum].url\r\n        setRandomImg(randMemeImg)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\" \r\n                    name=\"toptext\"\r\n                    placeholder=\"Top Text\"\r\n                    value={topText}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"text\" \r\n                    name=\"bottomtext\"\r\n                    placeholder=\"Bottom Text\"\r\n                    value={bottomText}\r\n                    onChange={handleChange}\r\n                />\r\n                <button>Gen</button>\r\n            </form>\r\n            <div className=\"meme\">\r\n                <img src={randomImg} alt=\"\"/>\r\n                <h2 className=\"top\">{topText}</h2>\r\n                <h2 className=\"bottom\">{bottomText}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeGeneratorComp","import React  from \"react\"\r\nimport Header from \"./MemeHeader\"\r\nimport MemeGeneratorComp from \"./MGComp\"\r\nimport \"../compCSS/MemeGenerator.css\"\r\n\r\nfunction MemeGenerator() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MemeGeneratorComp/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeGenerator","const QuoteLs = [\r\n    \"A reader lives a thousand lives before he dies.\", \r\n    \"Life can only be understood backwards, but it must be lived forwards.\",\r\n    \"The happiness of the wise grows out of their own free acts.\",\r\n    \"Be on of the best in your field and the money will find you.\",\r\n    \"It's not where you start, it's where you finish.\",\r\n    \"Working out should not be a punishment for what you eat, but a celebration for what you can achieve.\",\r\n    \"Disappointment is part of the road to greatness, always ask yourself, what did you learn from this effort.\",\r\n    \"Become at peace with the noise, find your soft zone.\",\r\n    \"Always seek out challenges, never avoid them.\",\r\n    \"Failure is not a negative.\",\r\n    \"When we make a mistake and get frozen in what was, a layer of detachment in the now builds.\",\r\n    \"Embrace transition.\",\r\n    \"Spur growth, but maintain balance.\",\r\n    \"You have to lose to incur growth, don't let ego get in the way.\",\r\n    \"Constant supply of a stimulus turns us into addicts.\",\r\n    \"Depth beats breath, depth opens the channel for our unconscious creative components that allow us to reach hidden potential.\",\r\n    \"Flow with distraction.\",\r\n    \"Have a solid foundation, then use this foundation to take on difficult scenarios.\",\r\n    \"Take a single idea and practice it, practice enough to add it to your invisible arsenal.\",\r\n    \"We're (gods) the dreams that humanity created to make sense of the shadows on the cave walls.\",\r\n    \"Call no man happy until he is dead, don't judge the shape of someone's life.\",\r\n    \"People react to fear, not love.\",\r\n    \"Others may hate you, but those who hate you don't win until you hate them and destroy yourself.\",\r\n    \"The Earth is a generous mother, she will provide plentiful abundance food for all her children, if they cultivate her soil in justice and peace.\",\r\n    \"As a person's time and effort accumulate, others who spent less time are likely to call this person talented.\",\r\n    \"A man's true potential comes when his various talents and knowledge are fully utilized to create value for others.\",\r\n    \"It's easier to say there's something wrong with me, then admitting you need to improve.\",\r\n    \"Don't lose hope, celebrate progress and fight for more.\",\r\n    \"Media relies on drama for attention.\",\r\n    \"Expect bad news, good news is never news.\",\r\n    \"No room for facts when our minds are occupied by fear.\",\r\n    \"All those things you are afraid of, murder plane crash, terrorism none of thtem kill more than 1 percent of people per year. Victims of drunk driving kill more, but drunk driving isn't dramatic so it's not reported\",\r\n    \"Focus on the dangers of today, not the past.\",\r\n    \"Be calm before carrying on.\",\r\n    \"Slow change is still change.\",\r\n    \"Problems are complex, not simple. Think at many angles and solve them case by case.\",\r\n    \"Look for causes or systems, not villains.\",\r\n    \"Data should tell the truth, not call for action.\",\r\n    \"Human beings are the sex organs of the machine world.\",\r\n    \"Being humble means you can stop feeling pressured to have a view about everything and stop feeling the necessity to defend your views all the time.\",\r\n    \"Be curious, be open to new information and actively seek it out.\",\r\n    \"Be uncommon amongst the uncommon.\",\r\n    \"War is a way of destroying materials that might otherise be used for good.\",\r\n    \"Complain less, enjoy more.\",\r\n    \"Confidence doesn't come from assurance.\",\r\n    \"Have some curosity, be less concerned with what other people think.\",\r\n    \"Just open up and let someone in, whatever comes after you face it together.\",\r\n    \"Large circle to smaller circles.\"\r\n]\r\n\r\nexport default QuoteLs","import React, {useState}  from \"react\"\r\nimport {AnimateOnChange} from \"react-animation\"\r\nimport \"../compCSS/Quote.css\"\r\nimport QuoteLs from \"./QuoteLs\"\r\n\r\n//Give a statement with a button\r\n//Then randomly select one\r\n//<button onClick={handleSubmit}>Quote!</button>\r\n\r\nfunction Quote() {\r\n    const [quote, setQuote] = useState()\r\n    \r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        const randomQuote = QuoteLs[Math.floor(Math.random()*QuoteLs.length)]\r\n        setQuote(randomQuote)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"quoteBig\">\r\n            <div className=\"quoteFixed\">\r\n                <h1 className=\"quoteHeader\">Random Quote Generator</h1>\r\n                <p className=\"quotePara\">I've read a lot of books, it was only recently that I started \r\n                    writing/saving meanigful statements I came across. Enjoy!</p>\r\n                <button className=\"quoteBtn\" onClick={handleSubmit}>Quote!</button><br></br>\r\n                <div className=\"quoteRemain\">\r\n                    <AnimateOnChange \r\n                        animationIn=\"custom-animation-in 500ms ease-out forwards\"\r\n                        animationOut=\"custom-animation-out 500ms ease-out forwards\"\r\n                        durationOut={500}>{quote}\r\n                    </AnimateOnChange>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote","import React, {useState, useEffect, useRef} from \"react\"\r\nimport \"../compCSS/SpeedTyping.css\"\r\n\r\nfunction SpeedTypingGame() {\r\n\r\n    const STARTING_TIME = 15\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME)\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const [wordCount, setWordCount] = useState(0)\r\n\r\n    const textBoxRef = useRef(null)\r\n\r\n\r\n    function handleChange(e) {\r\n        const {value} = e.target\r\n        setText(value)\r\n    }\r\n\r\n    function startGame() {\r\n        setIsTimeRunning(true)\r\n        setTimeRemaining(STARTING_TIME)\r\n        setText(\"\")\r\n        textBoxRef.current.disabled = false\r\n        textBoxRef.current.focus()\r\n    }\r\n\r\n    function endGame() {\r\n        setIsTimeRunning(false)\r\n        const numWords = calculateWordCount(text)\r\n        setWordCount(numWords)\r\n    }\r\n\r\n    function calculateWordCount(text) {\r\n        const wordsArr = text.trim().split(\" \")\r\n        const filteredWords = wordsArr.filter(word => word !== \"\")\r\n        return filteredWords.length\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isTimeRunning && timeRemaining > 0) {\r\n            setTimeout(() => {\r\n                setTimeRemaining(time => time - 1)\r\n            }, 1000)\r\n        } else if (timeRemaining === 0) {\r\n            endGame()\r\n        }\r\n    }, [timeRemaining, isTimeRunning])\r\n\r\n    return (\r\n        <div className=\"speedHolder\">\r\n            <h1 className=\"speedH1\">How fast do you type?</h1>\r\n            <textarea \r\n                className=\"speedTextArea\"\r\n                ref={textBoxRef} \r\n                onChange={handleChange}\r\n                value={text}\r\n                disabled={!isTimeRunning}\r\n            />\r\n            <h4>Time remaining: {timeRemaining} </h4>\r\n            <button \r\n                className=\"speedBtn\" \r\n                onClick={startGame}\r\n                disabled={isTimeRunning}\r\n            >\r\n            Start</button>\r\n            <h1>Word Count: {wordCount}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpeedTypingGame","import React, {useState, useEffect} from \"react\"\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction ContextProvider({children}) {\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n\r\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n\r\n    function toggleFavorite(id) {\r\n        const updatedArr = allPhotos.map(photo => {\r\n            if(photo.id === id) {\r\n                console.log(id)\r\n                console.log(!photo.isFavorite)\r\n                return {\r\n                    ...photo,\r\n                    isFavorite: !photo.isFavorite\r\n                }\r\n            }\r\n            return photo\r\n        })\r\n\r\n        setAllPhotos(updatedArr)\r\n    }\r\n\r\n    function addToCart(newItem) {\r\n        setCartItems(prevItems => [...prevItems, newItem])\r\n    }\r\n\r\n    function removeFromCart(id){\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n\r\n    function emptyCart() {\r\n        setCartItems([])\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{allPhotos, toggleFavorite, cartItems, addToCart, removeFromCart, emptyCart}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\r\nimport \"../compCSS/PicSome.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Context} from \"../context/PicSomeContext\"\r\n\r\nfunction Header() {\r\n    const {cartItems} = useContext(Context)\r\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\r\n    return (\r\n        <header className=\"picSomeHeader\">\r\n            <Link to=\"/PicSome\"><h2>Pic Some</h2></Link>\r\n            <Link to=\"/Picsome/Cart\"><i className={`${cartClassName} ri-fw ri-2x`}></i></Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {Context} from \"../context/PicSomeContext\"\r\n\r\nfunction Image({className, img}) {\r\n    const [hovered, setHovered] = useState(false)\r\n    const {toggleFavorite, addToCart, removeFromCart, cartItems} = useContext(Context)\r\n\r\n    function heartIcon() {\r\n        if(img.isFavorite) {\r\n            return <i className=\"ri-heart-fill favorite\" alt=\"heart-fill\" onClick={() => toggleFavorite(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-heart-line favorite\" alt=\"heart-unfilled\" onClick={() => toggleFavorite(img.id)}></i>\r\n        }\r\n    }\r\n\r\n    function cartIcon() {\r\n        const alreadyInCart = cartItems.some(item => item.id ===img.id)\r\n        if(alreadyInCart) {\r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`${className} image-container`}\r\n            onMouseEnter={() => setHovered(true)}\r\n            onMouseLeave={() => setHovered(false)}\r\n        >\r\n            <img src={img.url} alt=\"fail to load\" className=\"image-grid\"/>\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes ={\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, {useContext} from \"react\"\r\nimport Image from \"../components/PicSomeImage\"\r\nimport {Context} from \"../context/PicSomeContext\"\r\nimport {getClass} from \"../utils/indexPhoto\"\r\n\r\nfunction Photos() {\r\n    const {allPhotos} = useContext(Context)\r\n\r\n    const imageElements = allPhotos.map((img, i) => (\r\n        <Image key={img.id} img={img} className={getClass(i)} />\r\n    ))\r\n    \r\n    return (\r\n        <main className=\"photos\">\r\n            {imageElements}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","import React from \"react\"\r\nimport Header from \"./PicSomeHeader\"\r\nimport Photos from \"../pages/Photos\"\r\nimport \"../compCSS/PicSome.css\"\r\n\r\nfunction PicSome() {    \r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Photos/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PicSome","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../context/PicSomeContext\"\r\n\r\nfunction CartItem({item}) {\r\n    const {removeFromCart} = useContext(Context)\r\n    const [hovered, setHovered] = useState(false)\r\n\r\n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i \r\n                className={iconClassName} \r\n                onClick={() => removeFromCart(item.id)}\r\n                onMouseEnter={() => setHovered(true)}\r\n                onMouseLeave={() => setHovered(false)}\r\n            >\r\n            </i>\r\n            <img src={item.url} alt=\"image failed to load\" width=\"130px\" />\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import React, {useState, useContext} from \"react\"\r\nimport Header from \"../components/PicSomeHeader\"\r\nimport \"../compCSS/PicSome.css\"\r\nimport {Context} from \"../context/PicSomeContext\"\r\nimport CartItem from \"../components/PicSomeCartItem\"\r\n\r\nfunction Cart() {\r\n    const [buttonText, setButtonText] = useState(\"Place Order\")\r\n    const {cartItems, emptyCart} = useContext(Context)\r\n    const totalCost = 5.99 * cartItems.length\r\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n    \r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n\r\n    function placeOrder() {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout(() => {\r\n            console.log(\"Order placed!\")\r\n            setButtonText(\"Place Order\")\r\n            emptyCart()\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"cart-page\">\r\n            <Header />\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay} </p>\r\n            {\r\n                cartItems.length > 0 ?\r\n                    <div className=\"order-button\">\r\n                        <button onClick={placeOrder}>{buttonText}</button>\r\n                    </div> :\r\n                    <p>You have no items in your cart.</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, {useEffect, useState} from 'react';\r\nimport {pi} from 'mathjs'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Plot from 'react-plotly.js';\r\nimport \"../compCSS/SWApi.css\"\r\n\r\n\r\nfunction SWApi() {\r\n  \r\n  const [apiData, setApiData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const url = \"https://swapi.dev/api/planets/\"\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setApiData(result.results)\r\n      })\r\n      .catch(e => console.error(e))\r\n  }, [])\r\n\r\n  function expo(x, f) {\r\n    return Number.parseFloat(x).toExponential(f)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1 className=\"header\">Star Wars Planets vs. Earth</h1>\r\n      </header>\r\n      <Table striped bordered hover variant=\"dark\" >\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Diameter (km)</th>\r\n          <th>Rotational Period (hours)</th>\r\n          <th>Orbital Period (days)</th>\r\n          <th>Climate</th>\r\n          <th>Terrain</th>\r\n          <th>Population</th>\r\n          <th>Population Density (per km^2)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {apiData.map((planet, i) => (\r\n          <tr key={i}>\r\n            <td>{planet.name}</td>\r\n            <td>{planet.diameter}</td>\r\n            <td>{planet.rotation_period}</td>\r\n            <td>{planet.orbital_period}</td>\r\n            <td>{planet.climate}</td>\r\n            <td>{planet.terrain}</td>\r\n            <td>{expo(planet.population, 2)}</td>\r\n            <td>{expo(planet.population / (pi *(planet.diameter / 2)**2), 2)}</td>\r\n          </tr>\r\n        ))}\r\n        <tr key={\"earth\"}>\r\n          <td>Earth</td>\r\n          <td>12,742</td>\r\n          <td>24</td>\r\n          <td>365</td>\r\n          <td>temperate</td>\r\n          <td>All of the above</td>\r\n          <td>{expo(7800000000, 2)} people</td>\r\n          <td>{expo( 7800000000 / (pi * (12742 / 2)**2), 2)}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n    <Plot className=\"plot\"\r\n        data={[\r\n          {\r\n              x: [\"Tatooine\", \"Alderaan\", \"Yavin IV\", \"Hoth\", \"Dagobah\", \"Bespin\", \"Endor\", \"Naboo\", \"Coruscant\", \"Kamino\", \"Earth\"],\r\n              y: [.00233, 16.3, .0000122, 0, 0, .000549, 1.59, 39.0, 8500, 3.27, 61.2],\r\n              type: 'bar'\r\n          }\r\n        ]}\r\n        layout={ {yaxis: {range: [-1, 100]},  width: 1250, height: 500, title: 'Star Wars Population Density compared to Earth', textalign: 'center'} }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SWApi;","import React from \"react\"\nimport \"./App.css\"\nimport List from \"./components/ToDoList\"\nimport MemeGenerator from \"./components/MemeGenerator\"\nimport Quote from \"./components/Quote\"\nimport SpeedTypingGame from \"./components/SpeedTypingGame\"\nimport PicSome from \"./components/PicSome\"\nimport Cart from \"./pages/Cart\"\nimport Calculator from \"./components/Calculator\"\nimport SWApi from \"./components/SWApi\"\nimport {Link, Switch, Route} from \"react-router-dom\"\n\nfunction App() {\n  return(\n    <div>\n      <p>This is the project staging area, I haven't completly figured out how to anchor link a pure html file to work with a react app's Switch and Router hooks. It's probably just easier to make\n        this whole landing page into a react app, but that'll be after I finish some more projects.\n      </p>\n      <Link to=\"/List\">ToDo List</Link> || <Link to=\"/FunReads\">A Quote a Day</Link> || <Link to=\"/Meme\">Meme Generator</Link> || <Link to=\"/SpeedTypingGame\">Speed Typing Game </Link> || <Link to=\"/Calculator\">Calculator App </Link> || <Link to=\"/PicSome\">Pic Some App </Link>\n       || <Link to=\"/SWApi\">Star Wars API w/ Plotly </Link>\n      <Switch>\n        <Route exact path=\"/List\"><List/></Route>\n        <Route exact path=\"/FunReads\"><Quote/></Route>\n        <Route exact path=\"/Meme\"><MemeGenerator/></Route>\n        <Route exact path=\"/SpeedTypingGame\"><SpeedTypingGame/></Route>\n        <Route exact path=\"/Calculator\"><Calculator/></Route>\n        <Route exact path=\"/PicSome\"><PicSome/></Route>\n        <Route exact path=\"/PicSome/Cart\"><Cart/></Route>\n        <Route exact path=\"/SWApi\"><SWApi/></Route>\n      </Switch>\n    </div>\n  )\n} \nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ContextProvider} from \"./context/PicSomeContext\"\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <ContextProvider>\n      <Router>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n    </Router>\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}